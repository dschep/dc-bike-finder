service:
  name: bikefinder
  awsKmsKeyArn: arn:aws:kms:us-east-1:704903784842:key/49b8e145-0e10-4e99-a899-c4cdfe07880c

provider:
  name: aws
  runtime: python3.6
  variableSyntax: "\\${((?!AWS)[ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}"
  environment:
    CORS_ORIGIN: ${self:custom.${self:custom.stage}.corsOrigin}
    STAGE: ${self:custom.stage}
  iamRoleStatements:
    - Effect: Allow
      Action: ssm:GetParameter
      Resource:
        Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${self:custom.service.name}/${self:custom.stage}/*
    - Effect: Allow
      Action: lambda:InvokeFunction
      Resource:
        Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${self:custom.service.name}-${self:custom.stage}-scrape_mobike
    - Effect: Allow
      Action:  kms:Decrypt
      Resource: ${self:custom.service.awsKmsKeyArn}
    - Effect: Allow
      Action:  s3:PutObject
      Resource: arn:aws:s3:::bikehero-labs

custom:
  # work around for ${self:service} not working
  service: ${file(serverless.yml):service}
  # shortcut  to evaluation the various stage sources
  stage: ${opt:stage, self:provider.stage}
  # serverless-finch config
  client:
    bucketName: share.bikehero.io
  # per stage configs
  prod:
    corsOrigin: https://share.bikehero.io
    schedules:
      scrape: []
  dev:
    corsOrigin: '*'
    schedules:
      scrape:
        - schedule: 'rate(10 minutes)'

package:
  include:
    - bikefinder/**/*.py
  exclude:
    - '**/*'

functions:
  cabi:
    handler: bikefinder/handlers.bikeshare_proxy
    events:
      - http:
          path: /cabi
          method: get
  mobike:
    handler: bikefinder/handlers.mobike_gbfs_proxy
    events:
      - http:
          path: /mobike
          method: get
  limebike:
    handler: bikefinder/handlers.limebike_proxy
    events:
      - http:
          path: /limebike
          method: get
  spin:
    handler: bikefinder/handlers.spin_proxy
    events:
      - http:
          path: /spin
          method: get
  ofo_request_token:
    handler: bikefinder/handlers.ofo_request_token
    timeout: 30
  ofo_login_with_token:
    handler: bikefinder/handlers.ofo_login_with_token
    timeout: 30
  ofo:
    handler: bikefinder/handlers.ofo_proxy
    timeout: 30
    events:
      - http:
          path: /ofo
          method: get
  mbike:
    handler: bikefinder/handlers.mbike_proxy
    timeout: 30
    events:
      - http:
          path: /mbike
          method: get

  scrape_jump:
    handler: bikefinder/scraper.scrape_jump
    timeout: 300
    events: ${self:custom.${self:custom.stage}.schedules.scrape}
    stages:
      - dev

  scrape_spin:
    handler: bikefinder/scraper.scrape_spin
    timeout: 300
    events: ${self:custom.${self:custom.stage}.schedules.scrape}
    stages:
      - dev

  scrape_limebike:
    handler: bikefinder/scraper.scrape_limebike
    timeout: 300
    events: ${self:custom.${self:custom.stage}.schedules.scrape}
    stages:
      - dev

  scrape_ofo:
    handler: bikefinder/scraper.scrape_ofo
    timeout: 300
    events: ${self:custom.${self:custom.stage}.schedules.scrape}
    stages:
      - dev

  scrape_mobike:
    handler: bikefinder/scraper.scrape_mobike_gbfs
    timeout: 300
    events: ${self:custom.${self:custom.stage}.schedules.scrape}
    stages:
      - dev

  bikes_from_db_to_s3:
    handler: bikefinder/handlers.bikes_from_db_to_s3
    timeout: 300
    events:
      - schedule: 'rate(1 day)'
    stages:
      - dev

plugins:
  - serverless-finch
  - serverless-python-requirements
  - serverless-plugin-select

resources:
  Resources:
    LabsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: bikehero-labs
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - GET
              AllowedOrigins:
                - "*"
