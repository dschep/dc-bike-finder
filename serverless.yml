service:
  name: bikefinder
  awsKmsKeyArn: arn:aws:kms:us-east-1:704903784842:key/49b8e145-0e10-4e99-a899-c4cdfe07880c

provider:
  name: aws
  runtime: python3.6
  variableSyntax: "\\${((?!AWS)[ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}"
  environment:
    CORS_ORIGIN: ${self:custom.${self:custom.stage}.corsOrigin}
    STAGE: ${self:custom.stage}

custom:
  # work around for ${self:service} not working
  service: ${file(serverless.yml):service}
  # shortcut  to evaluation the various stage sources
  stage: ${opt:stage, self:provider.stage}
  # serverless-finch config
  client:
    bucketName: share.bikehero.io
  # per stage configs
  prod:
    corsOrigin: https://share.bikehero.io
  dev:
    corsOrigin: '*'

package:
  include:
    - bikefinder/**/*.py
  exclude:
    - '**/*'

functions:
  cabi:
    handler: bikefinder/handlers.bikeshare_proxy
    events:
      - http:
          path: /cabi
          method: get
  mobike:
    handler: bikefinder/handlers.mobike_gbfs_proxy
    events:
      - http:
          path: /mobike
          method: get
  limebike:
    handler: bikefinder/handlers.limebike_proxy
    events:
      - http:
          path: /limebike
          method: get
  spin:
    handler: bikefinder/handlers.spin_proxy
    events:
      - http:
          path: /spin
          method: get
  ofo:
    handler: bikefinder/handlers.ofo_proxy
    timeout: 30
    events:
      - http:
          path: /ofo
          method: get
  mbike:
    handler: bikefinder/handlers.mbike_proxy
    timeout: 30
    events:
      - http:
          path: /mbike
          method: get

plugins:
  - serverless-finch
  - serverless-python-requirements
